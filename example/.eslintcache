[{"/Users/talal/workspace/personal/rest-api-react-client/example/src/index.js":"1","/Users/talal/workspace/personal/rest-api-react-client/example/src/App.js":"2","/Users/talal/workspace/personal/rest-api-react-client/example/src/reportWebVitals.js":"3","/Users/talal/workspace/personal/rest-api-react-client/example/src/constants.js":"4"},{"size":1095,"mtime":1608418898202,"results":"5","hashOfConfig":"6"},{"size":3842,"mtime":1608444650253,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1608354512529,"results":"8","hashOfConfig":"6"},{"size":140,"mtime":1608364417172,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"158jivb",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/talal/workspace/personal/rest-api-react-client/example/src/index.js",[],["21","22"],"/Users/talal/workspace/personal/rest-api-react-client/example/src/App.js",["23","24"],"import { usePost, useLazyGet } from 'rest-api-react-client';\nimport { isEmpty } from 'lodash/fp';\nimport queryString from 'query-string';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { accessTokenKey, callbackUrl, perPage } from './constants';\n\nconst App = () => {\n  const [params, setParams] = useState({\n    clientId: window.sessionStorage.getItem('clientId') || '',\n    clientSecret: window.sessionStorage.getItem('clientSecret') || '',\n  });\n  const githubAccessToken = window.sessionStorage.getItem(accessTokenKey);\n  const onChange = (e) => {\n    e.preventDefault();\n    window.sessionStorage.setItem(e.target.name, e.target.value);\n    setParams({\n      ...params,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const [page, setPage] = useState(1);\n\n  const onNext = () => {\n    setPage(page + 1);\n  }\n\n  const onPrevious = () => {\n    setPage(page - 1);\n  }\n\n  const [getAccessToken, { loading }] = usePost('/github_access_token', {\n    json: true,\n    baseUrl: process.env.ACCESS_TOKEN_EXCHANGE_SERVER,\n    onCompleted(res) {\n      if (res.access_token) {\n        window.sessionStorage.setItem(accessTokenKey, res.access_token);\n      }\n      window.location.href = window.location.pathname.replace('callback', '');\n    },\n    onError(err) {\n      alert(err.data);\n      window.location.href = window.location.pathname.replace('callback', '');\n    }\n  });\n\n  const [fetchRepos, { loading: reposLoading, data: userRepos }] = useLazyGet('/user/repos', {\n    json: true,\n    query: {\n      per_page: perPage,\n    },\n    onError(err) {\n      alert(err.data)\n      if (err.status === 401) {\n        window.sessionStorage.clear();\n        window.location.reload();\n      }\n    }\n  });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    window.location.href = queryString.stringifyUrl({\n      url: 'https://github.com/login/oauth/authorize',\n      query: {\n        client_id: params.clientId,\n        scope: 'user,repo'\n      }\n    });\n  }\n\n  useEffect(() => {\n    if (window.location.pathname.includes('/callback')) {\n      const callbackCode = queryString.parse(window.location.search).code;\n      if (callbackCode) {\n        getAccessToken({\n          params: {\n            client_id: window.sessionStorage.getItem('clientId'),\n            client_secret: window.sessionStorage.getItem('clientSecret'),\n            code: callbackCode,\n            redirect_uri: callbackUrl,\n          }\n        })\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (window.sessionStorage.getItem(accessTokenKey)) {\n      fetchRepos({ query: { page } });\n    }\n  }, [page]);\n\n  return (\n    <div className=\"App\">\n      <h1>Repositories List</h1>\n      {loading || reposLoading ? 'Loading...' : null}\n      {\n        githubAccessToken ? (\n          <>\n            <div>\n              {(userRepos || []).map((repo) => (<div key={repo.id}>Repo Name: {repo.name}</div>))}\n            </div>\n            <button disabled={reposLoading || page === 1} onClick={onPrevious}>Previous</button>\n            <button disabled={isEmpty(userRepos) || reposLoading} onClick={onNext}>Next</button>\n          </>\n        ): (\n          <form onSubmit={onSubmit} method=\"post\">\n            <legend>Github Credentials</legend>\n            <fieldset>\n              <label htmlFor=\"clientId\">Client ID</label>\n              <input required id=\"clientId\" name=\"clientId\" onChange={onChange} type=\"text\" value={params.clientId} />\n            </fieldset>\n            <fieldset>\n              <label htmlFor=\"clientSecret\">Client Secret</label>\n              <input required id=\"clientSecret\" name=\"clientSecret\" type=\"password\" onChange={onChange} value={params.clientSecret} />\n            </fieldset>\n            <input type=\"submit\" value=\"Authroize Github\" />\n          </form>\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","/Users/talal/workspace/personal/rest-api-react-client/example/src/reportWebVitals.js",[],"/Users/talal/workspace/personal/rest-api-react-client/example/src/constants.js",[],["25","26"],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":86,"column":6,"nodeType":"33","endLine":86,"endColumn":8,"suggestions":"34"},{"ruleId":"31","severity":1,"message":"35","line":92,"column":6,"nodeType":"33","endLine":92,"endColumn":12,"suggestions":"36"},{"ruleId":"27","replacedBy":"37"},{"ruleId":"29","replacedBy":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAccessToken'. Either include it or remove the dependency array.","ArrayExpression",["41"],"React Hook useEffect has a missing dependency: 'fetchRepos'. Either include it or remove the dependency array.",["42"],["39"],["40"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},{"desc":"45","fix":"46"},"Update the dependencies array to be: [getAccessToken]",{"range":"47","text":"48"},"Update the dependencies array to be: [fetchRepos, page]",{"range":"49","text":"50"},[2460,2462],"[getAccessToken]",[2593,2599],"[fetchRepos, page]"]